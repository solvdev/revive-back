# Generated by Django 4.2.14 on 2025-09-11 20:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('classes_per_month', models.PositiveIntegerField(blank=True, help_text='Número total de clases permitidas por mes. Si es nulo o 0, se considera ilimitado.', null=True)),
                ('scope', models.CharField(choices=[('GLOBAL', 'Global'), ('SEDE', 'Sede específica')], default='GLOBAL', help_text='Alcance de la membresía: GLOBAL (todas las sedes) o SEDE (sede específica)', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('clases_por_cliente', models.PositiveIntegerField(default=4)),
                ('scope', models.CharField(choices=[('GLOBAL', 'Global'), ('SEDE', 'Sede específica')], default='GLOBAL', help_text='Alcance de la promoción: GLOBAL (todas las sedes) o SEDE (sede específica)', max_length=10)),
                ('membership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studio.membership')),
            ],
        ),
        migrations.CreateModel(
            name='Sede',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre de la sede', max_length=100)),
                ('slug', models.SlugField(help_text='Identificador único para URLs', unique=True)),
                ('status', models.BooleanField(default=True, help_text='Sede activa/inactiva')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Sede',
                'verbose_name_plural': 'Sedes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Venta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=100)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('price_per_unit', models.DecimalField(decimal_places=2, max_digits=8)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(blank=True, max_length=100, null=True)),
                ('date_sold', models.DateTimeField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ventas', to='accounts.client')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ventas_created', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ventas_modified', to=settings.AUTH_USER_MODEL)),
                ('sede', models.ForeignKey(blank=True, help_text='Sede donde se realizó la venta', null=True, on_delete=django.db.models.deletion.CASCADE, to='studio.sede')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('MON', 'Lunes'), ('TUE', 'Martes'), ('WED', 'Miércoles'), ('THU', 'Jueves'), ('FRI', 'Viernes'), ('SAT', 'Sábado'), ('SUN', 'Domingo')], max_length=3)),
                ('time_slot', models.CharField(choices=[('05:00', '05:00 - 06:00'), ('06:00', '06:00 - 07:00'), ('07:00', '07:00 - 08:00'), ('08:00', '08:00 - 09:00'), ('09:00', '09:00 - 10:00'), ('10:00', '10:00 - 11:00'), ('11:00', '11:00 - 12:00'), ('12:00', '12:00 - 13:00'), ('16:00', '16:00 - 17:00'), ('17:00', '17:00 - 18:00'), ('18:00', '18:00 - 19:00'), ('19:00', '19:00 - 20:00')], default='05:00', max_length=5)),
                ('is_individual', models.BooleanField(default=False, help_text='Si se marca, la clase es individual (capacidad 1).')),
                ('capacity', models.PositiveIntegerField(default=9)),
                ('class_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='studio.classtype')),
                ('coach', models.ForeignKey(blank=True, limit_choices_to={'groups__name': 'coach'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_classes', to=settings.AUTH_USER_MODEL)),
                ('sede', models.ForeignKey(blank=True, help_text='Sede a la que pertenece este horario', null=True, on_delete=django.db.models.deletion.CASCADE, to='studio.sede')),
            ],
        ),
        migrations.CreateModel(
            name='PromotionInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('clients', models.ManyToManyField(to='accounts.client')),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='studio.promotion')),
            ],
        ),
        migrations.AddField(
            model_name='promotion',
            name='sede',
            field=models.ForeignKey(blank=True, help_text='Sede específica para promociones con scope=SEDE', null=True, on_delete=django.db.models.deletion.CASCADE, to='studio.sede'),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(blank=True, max_length=100, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=6)),
                ('date_paid', models.DateTimeField(default=django.utils.timezone.now)),
                ('valid_until', models.DateField(blank=True, null=True)),
                ('extra_classes', models.PositiveIntegerField(default=0, help_text='Clases adicionales otorgadas (compensaciones u otros motivos).')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.client')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments_created', to=settings.AUTH_USER_MODEL)),
                ('membership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studio.membership')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments_modified', to=settings.AUTH_USER_MODEL)),
                ('promotion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='studio.promotion')),
                ('promotion_instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='studio.promotioninstance')),
                ('sede', models.ForeignKey(blank=True, help_text='Sede donde se realizó el pago', null=True, on_delete=django.db.models.deletion.CASCADE, to='studio.sede')),
            ],
        ),
        migrations.AddField(
            model_name='membership',
            name='sede',
            field=models.ForeignKey(blank=True, help_text='Sede específica para membresías con scope=SEDE', null=True, on_delete=django.db.models.deletion.CASCADE, to='studio.sede'),
        ),
        migrations.CreateModel(
            name='BulkBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('processing', 'Procesando'), ('completed', 'Completado'), ('failed', 'Fallido'), ('partial', 'Parcialmente completado')], default='pending', max_length=20)),
                ('total_bookings', models.PositiveIntegerField(default=0)),
                ('successful_bookings', models.PositiveIntegerField(default=0)),
                ('failed_bookings', models.PositiveIntegerField(default=0)),
                ('notes', models.TextField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bulk_bookings', to='accounts.client')),
                ('sede', models.ForeignKey(blank=True, help_text='Sede para la cual se realizan las reservas masivas', null=True, on_delete=django.db.models.deletion.CASCADE, to='studio.sede')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PlanIntent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.client')),
                ('membership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studio.membership')),
                ('sede', models.ForeignKey(blank=True, help_text='Sede para la cual se seleccionó el plan', null=True, on_delete=django.db.models.deletion.CASCADE, to='studio.sede')),
            ],
            options={
                'unique_together': {('client', 'membership')},
            },
        ),
        migrations.CreateModel(
            name='MonthlyRevenue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField()),
                ('month', models.PositiveIntegerField()),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=25)),
                ('payment_count', models.PositiveIntegerField(default=0)),
                ('venta_count', models.IntegerField(default=0)),
                ('venta_total', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('sede', models.ForeignKey(blank=True, help_text='Sede para la cual se calcula el revenue (null = global)', null=True, on_delete=django.db.models.deletion.CASCADE, to='studio.sede')),
            ],
            options={
                'ordering': ['-year', '-month'],
                'unique_together': {('year', 'month', 'sede')},
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_date', models.DateField(default=django.utils.timezone.now, help_text='Fecha en que se realizará la clase')),
                ('date_booked', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pendiente de pago'), ('active', 'Activo'), ('cancelled', 'Cancelado')], default='active', max_length=10)),
                ('attendance_status', models.CharField(choices=[('pending', 'Pendiente'), ('attended', 'Asistió'), ('no_show', 'No se presentó')], default='pending', max_length=10)),
                ('cancellation_type', models.CharField(blank=True, choices=[('client', 'Cancelado por cliente'), ('instructor', 'Cancelado por instructor'), ('admin', 'Cancelado por administración')], help_text='Indica quién canceló la reserva.', max_length=10, null=True)),
                ('cancellation_reason', models.CharField(blank=True, help_text='Motivo de cancelación (especialmente para cancelaciones por instructor o admin).', max_length=255, null=True)),
                ('bulk_booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bookings', to='studio.bulkbooking')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.client')),
                ('membership', models.ForeignKey(blank=True, help_text='Plan seleccionado al momento de la reserva (opcional, no implica pago automático).', null=True, on_delete=django.db.models.deletion.SET_NULL, to='studio.membership')),
                ('payment', models.ForeignKey(blank=True, help_text='Pago relacionado con esta clase', null=True, on_delete=django.db.models.deletion.SET_NULL, to='studio.payment')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='studio.schedule')),
                ('sede', models.ForeignKey(blank=True, help_text='Sede donde se realizará la clase', null=True, on_delete=django.db.models.deletion.CASCADE, to='studio.sede')),
            ],
            options={
                'unique_together': {('client', 'schedule', 'class_date')},
            },
        ),
    ]
