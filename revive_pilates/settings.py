"""
Django settings for revive_pilates project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

import os

from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.

BASE_DIR = Path(__file__).resolve().parent.parent

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# Import environment configuration
try:
    from .env import SECURITY_CONFIG, CORS_CONFIG, FRONTEND_URL, FRONTEND_BOOKING_URL
except ImportError:
    # Fallback if env.py doesn't exist
    SECURITY_CONFIG = {
        'SECRET_KEY': 'django-insecure-revive-pilates-secret-key-2025',
        'DEBUG': True,
        'ALLOWED_HOSTS': ['*'],
    }
    CORS_CONFIG = {
        'ALLOW_ALL_ORIGINS': True,
        'ALLOWED_ORIGINS': [],
    }
    FRONTEND_URL = 'https://booking-testing.revivepilates.com'  # Same as booking URL
    FRONTEND_BOOKING_URL = 'https://booking-testing.revivepilates.com'

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = SECURITY_CONFIG['SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = SECURITY_CONFIG['DEBUG']

# Allowed hosts configuration
ALLOWED_HOSTS = SECURITY_CONFIG['ALLOWED_HOSTS']

CORS_ALLOW_ALL_ORIGINS = CORS_CONFIG['ALLOW_ALL_ORIGINS']

CORS_ALLOWED_ORIGINS = CORS_CONFIG['ALLOWED_ORIGINS']

# Permitir headers personalizados (configuración movida más abajo)


# Application definition

INSTALLED_APPS = [
    'rest_framework',
    'corsheaders',
    'django_apscheduler',
    'accounts',
    'studio',
    'finance',
    'inventory',
    'django_filters',
    'rest_framework_simplejwt',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

AUTH_USER_MODEL = 'accounts.CustomUser'


REST_FRAMEWORK = {
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=7),   # duración del token de acceso (por defecto 5 min)
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),      # duración del token de refresh
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': False,

    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,  # ya debe estar definida
    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_OBTAIN_SERIALIZER': 'accounts.serializers.CustomTokenObtainPairSerializer',
}

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'studio.middleware.SedeFilterMiddleware',
    'studio.middleware.SedeValidationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

MIDDLEWARE.insert(0, 'corsheaders.middleware.CorsMiddleware')
ROOT_URLCONF = 'revive_pilates.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'revive_pilates.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases



# Configuración temporal con SQLite para desarrollo
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'revive_db.sqlite3',
#     }
# }

# Configuración de PostgreSQL para producción (comentada temporalmente - problema de conectividad)
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'postgres',  # Database name for Revive
        'USER': 'reviveadmindb',     # Database user for Revive
        'PASSWORD': 'revive2025!',
        'HOST': 'revive-dbs.c7okeymccfwd.us-east-2.rds.amazonaws.com',
        'PORT': '5432',
        'OPTIONS': {
            'sslmode': 'require'  # opcional, pero recomendable en producción
        }
    }
}



# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'es'

TIME_ZONE = 'America/Guatemala'

USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Serve static files in production
if not DEBUG:
    STATICFILES_DIRS = [
        os.path.join(BASE_DIR, 'staticfiles'),
    ]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Email Configuration - Disabled temporarily
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'  # Cambiado para deshabilitar envío real
EMAIL_HOST = 'in-v3.mailjet.com'  # Mailjet SMTP server
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = ''  # 'c15bdbc4c6cbd885363c6dbd7e0db70d'
EMAIL_HOST_PASSWORD = ''  # '1484577f04215c3451f7ca851d7be3ba'
DEFAULT_FROM_EMAIL = 'no-reply@revivepilates.com'

# Mailjet API Configuration - Disabled temporarily
MAILJET_API_KEY = ''  # 'c15bdbc4c6cbd885363c6dbd7e0db70d'
MAILJET_SECRET_KEY = ''  # '1484577f04215c3451f7ca851d7be3ba'

# CORS Configuration
if DEBUG:
    # Configuración para desarrollo
    CORS_ALLOW_ALL_ORIGINS = True
    CORS_ALLOWED_ORIGINS = [
        "http://localhost:3000",
        "http://127.0.0.1:3000",
        "http://localhost:3001",
        "http://127.0.0.1:3001",
    ]
else:
    # Configuración para producción
    CORS_ALLOW_ALL_ORIGINS = False
    CORS_ALLOWED_ORIGINS = [
        "https://admin.revivepilates.com",
        "https://booking.revivepilates.com",
        "https://config.revivepilates.com",
        "https://revive-admin.vercel.app",
        "https://*.vercel.app",
        # Agregar otros dominios de producción según sea necesario
    ]

CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'x-sedes-selected',  # Header personalizado para sede
    'x-sede-id',  # Header para sede individual
]

# Configuración adicional de CORS para producción
CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]

# Headers expuestos para el frontend
CORS_EXPOSE_HEADERS = [
    "x-sedes-selected",
    "x-sede-id",
    "x-total-count",
]

# Configuración de Logging - Simplificada
# Solo logs básicos de Django, la bitácora de términos se maneja en BD
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}